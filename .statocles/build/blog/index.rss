<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Neil H. Watson</title>
        <link>http://watson-wilson.ca/blog/</link>
        <atom:link href="http://watson-wilson.ca/blog/index.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of Neil H. Watson</description>
        <generator>Statocles 0.083</generator>
        <item>
            <title>Understanding Terraform State</title>
            <link>http://watson-wilson.ca/blog/2017/04/17/terraform-state/</link>
            <guid>http://watson-wilson.ca/blog/2017/04/17/terraform-state/</guid>
            <description><![CDATA[
                <p><a href="https://terraform.io/"><img alt="terraform logo" src="https://raw.githubusercontent.com/hashicorp/terraform/master/website/source/assets/images/og-image.png" style="float:right" width="120px"></a></p>

<p>Terraform <a href="https://www.terraform.io/docs/state/purpose.html">state</a> is a database kept by Terraform to help it reconcile Terraform resource dependencies, and reconcile between Terraform code and the actual state on the target infrastructure. For example, in the state, Terraform expects to find an entry that matches your AWS resource defining a Route53 record and in your Terraform code. Whether or not the entry exits determines if Terraform will make a change or not.</p>

                    <p><a href="http://watson-wilson.ca/blog/2017/04/17/terraform-state/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/terraform/">terraform</a>
                    <a href="http://watson-wilson.ca/blog/tag/configuration-management/">configuration management</a>
                    <a href="http://watson-wilson.ca/blog/tag/cloud/">cloud</a>
                    <a href="http://watson-wilson.ca/blog/tag/aws/">AWS</a>
                </p>
            ]]></description>
            <pubDate>
                Mon, 17 Apr 2017 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Terraform modules</title>
            <link>http://watson-wilson.ca/blog/2017/03/30/terraform-modules/</link>
            <guid>http://watson-wilson.ca/blog/2017/03/30/terraform-modules/</guid>
            <description><![CDATA[
                <p><a href="https://terraform.io/"><img alt="terraform logo" src="https://raw.githubusercontent.com/hashicorp/terraform/master/website/source/assets/images/og-image.png" style="float:right" width="120px"></a></p>

<p>Here&#39;s what I&#39;ve learned so far using Terraform and its modules. I&#39;ve just scratched the surface so test and research on your own.</p>

                    <p><a href="http://watson-wilson.ca/blog/2017/03/30/terraform-modules/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/terraform/">terraform</a>
                    <a href="http://watson-wilson.ca/blog/tag/cloud/">cloud</a>
                    <a href="http://watson-wilson.ca/blog/tag/configuration-management/">configuration management</a>
                    <a href="http://watson-wilson.ca/blog/tag/aws/">AWS</a>
                </p>
            ]]></description>
            <pubDate>
                Thu, 30 Mar 2017 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Docker API from CLI</title>
            <link>http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/</link>
            <guid>http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/</guid>
            <description><![CDATA[
                <p><a href="https://docker.com/"><img alt="Docker website" src="http://watson-wilson.ca/static/images/docker-logo.png" style="float:right" width="120px"></a></p>

<p>Docker has command line programs, but they are not well suited to automation.
Return values and pars-able output are both lacking, but there is an
<a href="https://docs.docker.com/engine/reference/api/docker_remote_api/">API</a> that you
can use instead. The Dockerd api can listen on a local socket or even a
remote accessible port, but in these examples I&#39;ll show local socket only.</p>

                    <p><a href="http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/docker/">docker</a>
                    <a href="http://watson-wilson.ca/blog/tag/containers/">containers</a>
                    <a href="http://watson-wilson.ca/blog/tag/jq/">jq</a>
                    <a href="http://watson-wilson.ca/blog/tag/json/">json</a>
                    <a href="http://watson-wilson.ca/blog/tag/cli/">cli</a>
                </p>
            ]]></description>
            <pubDate>
                Tue, 15 Nov 2016 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Reboot and reconnect between Ansible tasks</title>
            <link>http://watson-wilson.ca/blog/2016/10/27/ansible-reboot/</link>
            <guid>http://watson-wilson.ca/blog/2016/10/27/ansible-reboot/</guid>
            <description><![CDATA[
                <p><a href="http://ansible.com"><img alt="go to ansible.com" src="http://watson-wilson.ca/static/images/ansible_logo_round.png" style="float:right" width="150px"></a></p>

<p>You can reboot and reconnect to your hosts between <a href="http://ansible.com">Ansible</a> tasks. </p>

                    <p><a href="http://watson-wilson.ca/blog/2016/10/27/ansible-reboot/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/configuration-management/">configuration management</a>
                    <a href="http://watson-wilson.ca/blog/tag/ansible/">ansible</a>
                    <a href="http://watson-wilson.ca/blog/tag/orchestration/">orchestration</a>
                    <a href="http://watson-wilson.ca/blog/tag/scripting/">scripting</a>
                </p>
            ]]></description>
            <pubDate>
                Thu, 27 Oct 2016 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Bosh and Cloud Foundry, an intro</title>
            <link>http://watson-wilson.ca/blog/2016/10/10/cloudfoundry/</link>
            <guid>http://watson-wilson.ca/blog/2016/10/10/cloudfoundry/</guid>
            <description><![CDATA[
                <p><a href="https://cloudfoundry.org/"><img alt="cloudfoundry website" src="http://watson-wilson.ca/static/images/Cloud-Foundry-Logo.png" style="float:right" width="120px"></a></p>

<p><a href="https://www.cloudfoundry.org/">Cloud Foundry</a> is an open source platform as a service product owned by Pivotal Software. CF allows you to deploy applications to containers on AWS, Azue, VMware vSphere, and others.</p>

                    <p><a href="http://watson-wilson.ca/blog/2016/10/10/cloudfoundry/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/cloud/">cloud</a>
                    <a href="http://watson-wilson.ca/blog/tag/cloud-foundry/">cloud foundry</a>
                    <a href="http://watson-wilson.ca/blog/tag/bosh/">bosh</a>
                    <a href="http://watson-wilson.ca/blog/tag/containers/">containers</a>
                </p>
            ]]></description>
            <pubDate>
                Mon, 10 Oct 2016 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

