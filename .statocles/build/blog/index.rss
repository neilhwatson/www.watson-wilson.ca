<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Neil H. Watson</title>
        <link>http://watson-wilson.ca/blog/</link>
        <atom:link href="http://watson-wilson.ca/blog/index.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of Neil H. Watson</description>
        <generator>Statocles 0.077</generator>
        <item>
            <title>Docker API from CLI</title>
            <link>http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/</link>
            <guid>http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/</guid>
            <description><![CDATA[
                <p><a href="https://docker.com/"><img alt="Docker website" src="http://watson-wilson.ca/static/images/docker-logo.png" style="float:right" width="120px"></a></p>

<p>Docker has command line programs, but they are not well suited to automation.
Return values and pars-able output are both lacking, but there is an
<a href="https://docs.docker.com/engine/reference/api/docker_remote_api/">API</a> that you
can use instead. The Dockerd api can listen on a local socket or even a
remote accessible port, but in these examples I&#39;ll show local socket only.</p>

                    <p><a href="http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/docker/">docker</a>
                    <a href="http://watson-wilson.ca/blog/tag/containers/">containers</a>
                    <a href="http://watson-wilson.ca/blog/tag/jq/">jq</a>
                    <a href="http://watson-wilson.ca/blog/tag/json/">json</a>
                    <a href="http://watson-wilson.ca/blog/tag/cli/">cli</a>
                </p>
            ]]></description>
            <pubDate>
                Tue, 15 Nov 2016 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Reboot and reconnect between Ansible tasks</title>
            <link>http://watson-wilson.ca/blog/2016/10/27/ansible-reboot/</link>
            <guid>http://watson-wilson.ca/blog/2016/10/27/ansible-reboot/</guid>
            <description><![CDATA[
                <p><a href="http://ansible.com"><img alt="go to ansible.com" src="http://watson-wilson.ca/static/images/ansible_logo_round.png" style="float:right" width="150px"></a></p>

<p>You can reboot and reconnect to your hosts between <a href="http://ansible.com">Ansible</a> tasks. </p>

<pre><code>---
# Other task above here.

# Now reboot and reconnect
- block:

    # The at module allows ansible to issue the command and disconnect 
    # cleanly before the reboot disconnects the network connection.
   - name: Reboot in one minute
     at: command=reboot count=1 units=minutes

   # You may need to adjust this dependong on how fast your host halts.
   - name: Wait for reboot to start and hopefully finish 
     pause: minutes=2

   - name: Try to re-connect to rebooted host before continuing  
     command: /bin/true
     register: online
     retries: 20
     delay: 30
     until: online|success

# Continue your tasks...
</code></pre>

<ol>
<li><a href="http://docs.ansible.com/ansible/playbooks_blocks.html">blocks</a> group tasks for better control and debugging.</li>
<li><a href="http://docs.ansible.com/ansible/at_module.html">at</a> uses the UNIX <a href="https://linux.die.net/man/1/at">at</a> tool.</li>
<li><a href="http://docs.ansible.com/ansible/pause_module.html">pause</a> pauses like sleep.</li>
<li>Retries and delay works like a <a href="http://docs.ansible.com/ansible/playbooks_loops.html#do-until-loops">do until</a> loops.</li>
</ol>

                    <p><a href="http://watson-wilson.ca/blog/2016/10/27/ansible-reboot/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/configuration-management/">configuration management</a>
                    <a href="http://watson-wilson.ca/blog/tag/ansible/">ansible</a>
                    <a href="http://watson-wilson.ca/blog/tag/orchestration/">orchestration</a>
                    <a href="http://watson-wilson.ca/blog/tag/scripting/">scripting</a>
                </p>
            ]]></description>
            <pubDate>
                Thu, 27 Oct 2016 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Bosh and Cloud Foundry, an intro</title>
            <link>http://watson-wilson.ca/blog/2016/10/10/cloudfoundry/</link>
            <guid>http://watson-wilson.ca/blog/2016/10/10/cloudfoundry/</guid>
            <description><![CDATA[
                <p><a href="https://cloudfoundry.org/"><img alt="cloudfoundry website" src="http://watson-wilson.ca/static/images/Cloud-Foundry-Logo.png" style="float:right" width="120px"></a></p>

<p><a href="https://www.cloudfoundry.org/">Cloud Foundry</a> is an open source platform as a service product owned by Pivotal Software. CF allows you to deploy applications to containers on AWS, Azue, VMware vSphere, and others.</p>

                    <p><a href="http://watson-wilson.ca/blog/2016/10/10/cloudfoundry/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/cloud/">cloud</a>
                    <a href="http://watson-wilson.ca/blog/tag/cloud-foundry/">cloud foundry</a>
                    <a href="http://watson-wilson.ca/blog/tag/bosh/">bosh</a>
                    <a href="http://watson-wilson.ca/blog/tag/containers/">containers</a>
                </p>
            ]]></description>
            <pubDate>
                Mon, 10 Oct 2016 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Previewing Markdown using grip</title>
            <link>http://watson-wilson.ca/blog/2016/07/22/grip/</link>
            <guid>http://watson-wilson.ca/blog/2016/07/22/grip/</guid>
            <description><![CDATA[
                <p>Review your markdown locally with <a href="https://github.com/joeyespo/grip">Grip</a>,
powered by Python.</p>

                    <p><a href="http://watson-wilson.ca/blog/2016/07/22/grip/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/markdown/">markdown</a>
                    <a href="http://watson-wilson.ca/blog/tag/github/">github</a>
                    <a href="http://watson-wilson.ca/blog/tag/bitbucket/">bitbucket</a>
                    <a href="http://watson-wilson.ca/blog/tag/python/">python</a>
                </p>
            ]]></description>
            <pubDate>
                Fri, 22 Jul 2016 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Vote for your favourite CFEngine bugs</title>
            <link>http://watson-wilson.ca/blog/2016/03/27/vote_for_cfengine_bugs/</link>
            <guid>http://watson-wilson.ca/blog/2016/03/27/vote_for_cfengine_bugs/</guid>
            <description><![CDATA[
                <p><a href="https://openclipart.org/detail/223801/bad-bug">
    <img alt="bug photo" src="https://openclipart.org/download/223801/bad-bug.svg" style="float:right"></a></p>

<p>CFEngine has switched to a
<a href="https://tracker.mender.io/projects/CFE/summary">JIRA bug system</a> and this
system allows us to vote for bugs. I encourage you to vote for your favourite
bugs; here are mine:</p>

                    <p><a href="http://watson-wilson.ca/blog/2016/03/27/vote_for_cfengine_bugs/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/cfengine/">cfengine</a>
                    <a href="http://watson-wilson.ca/blog/tag/configuration-management/">configuration management</a>
                </p>
            ]]></description>
            <pubDate>
                Sun, 27 Mar 2016 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

