<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Neil H. Watson</title>
        <link>http://ettin/blog/tag/ipv6/</link>
        <atom:link href="http://ettin/blog/tag/ipv6.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of Neil H. Watson</description>
        <generator>Statocles 0.057</generator>
        <item>
            <title>IPv6 Migration part 8</title>
            <link>http://ettin/blog/2012/08/01/ipv6-migration-part8/</link>
            <guid>http://ettin/blog/2012/08/01/ipv6-migration-part8/</guid>
            <description><![CDATA[
                <p>DNS for IPV6 is just like IPV4, but longer. In part 2 I discussed DNS quad A records. Now I&#39;ll explain IPV6 PTR records.</p>

<p>In this example I&#39;ll use Bind and the subnet 2001:470:1d:a2f::/64. First load the zone file.</p>

<p>zone &quot;f.2.a.0.d.1.0.0.0.7.4.0.1.0.0.2.ip6.arpa&quot; {
   type master;
   file &quot;/etc/bind/db.2001:470:1d:a2f&quot;;
};</p>

<p>Note that &quot;ipv6.arpa&quot; is different than IPV4 (in-addr.arpa). The 16 numbers in the zone make up the subnet (a /64). As is custom, they are in reverse order. The last 16 digits, not shown here, are all part of the subnet and are not yet needed.</p>

<p>In PTR records, IPV6 addresses must be reversed just like IPV4 addresses. When done manually this can drive you mental because IPV6 addresses are up to 32 characters long. Fortunately you can use tools to reverse these for you. Consider the humble host command.</p>

<h1>host 2001:470:1d:a2f::1</h1>

<p>1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.f.2.a.0.d.1.0.0.0.7.4.0.1.0.0.2.ip6.arpa domain name pointer alix.watson-wilson.ca.</p>

<p>Also, the dig command.</p>

<h1>dig -x 2001:470:1d:a2f::1</h1>

<p>; &lt;&lt;&gt;&gt; DiG 9.8.4-rpz2+rl005.12-P1 &lt;&lt;&gt;&gt; -x 2001:470:1d:a2f::1
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 6661
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 2, ADDITIONAL: 3</p>

<p>;; QUESTION SECTION:
;1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.f.2.a.0.d.1.0.0.0.7.4.0.1.0.0.2.ip6.arpa. IN PTR</p>

<p>Avid script writers are invited to create ingenious ways to cut the first or last 16 digits as needed. Next up the zone file.</p>

<p>;; 2001:470:1d:a2f/64
$TTL 3h
@ IN SOA sol.watson-wilson.ca. hostmaster.watson-wilson.ca. (
        30              ; TODO SERIAL
        3h              ; 3 hour refresh
        1h              ; 1 hour retry
        1w              ; 1 week expire
        1h)     ; negatic TTL cache</p>

<p>NS sol.watson-wilson.ca.
   NS alix.watson-wilson.ca.</p>

<p>$ORIGIN f.2.a.0.d.1.0.0.0.7.4.0.1.0.0.2.ip6.arpa.</p>

<p>1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN PTR alix.watson-wilson.ca.
2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN PTR ettin.watson-wilson.ca.
3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 IN PTR scope.watson-wilson.ca.</p>

<p>Most of the file is as we would use in IPV4. The last parts are IPV6 related. The &#39;$ORIGIN&#39; denotes the subnet. This is a short cut. Bind will know to add this to the PTR records below it. The PTR records show the last 16 digits of the IP address, again in reverse order. Bind will put the origin and the PTR record together like this:</p>

<p>1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.f.2.a.0.d.1.0.0.0.7.4.0.1.0.0.2.ip6.arpa IN PTR alix.watson-wilson.ca.</p>

<p>That&#39;s enough for working PTR records in IPV6. I hope you found this help.</p>

                    <p><a href="http://ettin/blog/2012/08/01/ipv6-migration-part8/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://ettin/blog/tag/ipv6/">ipv6</a>
                    <a href="http://ettin/blog/tag/networking/">networking</a>
                </p>
            ]]></description>
            <pubDate>
                Wed, 01 Aug 2012 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>IPv6 Migration part 7</title>
            <link>http://ettin/blog/2012/07/25/ipv6-migration-part7/</link>
            <guid>http://ettin/blog/2012/07/25/ipv6-migration-part7/</guid>
            <description><![CDATA[
                <p>I&#39;ve broken up with SixXS. Hurricane Electric is my new girl.</p>

<p>It all started when an error in my Cfengine service began restarting SixXS&#39;s tunnel daemon, aiccu, four times per hour. SixXS viewed this as improper behavior and disabled my account. The irony is that my account was disabled by a daemon and not by a human. Let me explain. I contacted SixXS support to have my account turned back on. I explained what had happened and that the problem had been fixed. I was told that I was not supposed to run aiccu under any automatic service. Aiccu is supposed to run on its own. If it breaks, a human is meant to intervene. See the irony? But really, who manages daemons manually these days? Is this the stone age? Sure enough, check out SixXS&#39;s aiccu terms of use.</p>

<p>I tried to convince the SixXS person that automation is good. He was not swayed. Disheartened, I consulted with the nice folks of #ipv6 at Freenode. It seems many have had fights and breakups with SixXS. Eventually I did get my account back, but only after many emails and by promising to manually run and manage aiccu. My heart was broken. I knew, in the future, I would clash with SixXS again on some trivial infraction. In this relationship, is was all SixXS. I knew we had to break up.</p>

<p>What mends a broken heart the best? Getting in a better relationship before your ex does. And along came Hurricane Electric. The folks at #ipv6 recommended HE to me. Like SixXS, HE offers free tunnels. Unlike SixXS, HE also offers paid network and hosting services. Their free tunnel service has interesting features.</p>

<pre><code>Users can take online tests to gain IPV6 experience ranks. These ranks are fun to brag about, but they also allow HE staff to gauge your IPV6 knowledge when dealing with you.
You can have up to 5 tunnels per account. Each tunnel has its own /64 or /48 IPV6 address block.
Tunnels are simple IP tunnels requiring no daemon. A clever URL based API allows those with a dynamic IPV4 address to quickly change the tunnel to match a changed IPV4 address. This can be automated.
IRC and SMTP ports are blocked by default. I was able to unblock IRC myself using HE&#39;s tunnel manager web page. I was also able to unblock SMTP after a no hassle email to HE support. I&#39;m told that this was easy for me because I took the HE online tests to reach &#39;Sage&#39; level before hand.
</code></pre>

<p>I&#39;m happy with HE. Is has not been long, but I feel like HE might be THE ONE.</p>

<p><a href="http://ipv6.he.net/certification/scoresheet.php?pass_name=neilhwatson" target="_blank"><img alt="IPv6 Certification Badge for neilhwatson" src="http://ipv6.he.net/certification/create_badge.php?pass_name=neilhwatson&amp;badge=1" style="border: 0; width: 128px; height: 128px"></a></p>

                    <p><a href="http://ettin/blog/2012/07/25/ipv6-migration-part7/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://ettin/blog/tag/ipv6/">ipv6</a>
                    <a href="http://ettin/blog/tag/networking/">networking</a>
                </p>
            ]]></description>
            <pubDate>
                Wed, 25 Jul 2012 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>IPv6 Migration part 6</title>
            <link>http://ettin/blog/2012/07/05/ipv6-migration-part6/</link>
            <guid>http://ettin/blog/2012/07/05/ipv6-migration-part6/</guid>
            <description><![CDATA[
                <p>Liberation! Using IPV6, I have 18,446,744,073,709,551,616 public IP addresses. This is considered a small offering (/64). Normally, an organization would get a /48 network that contains 65536 /64 subnets.</p>

<p>Previously my local IPV6 setup was limited to just my workstation. It initiated the 6in4 tunnel to my IPV6 tunnel broker, Sixxs. Recently this tunnel malfunctioned. I think it was due to it passing through a NAT IPV4 router. I did not discover the problem but, I did move on the next stage. Now my router handles the tunnel and my workstation has a static IPV6 address from the /64 block provided by Sixxs.</p>

<p>My router is an Alix system running Linux. Moving the tunnel from my workstation to the router was quite simple. Note, that in part 1 I was using a static tunnel. With IPV4 addresses in short supply, and poor ISP quality in Canada, I had to move to a dynamic IP address setup. Sixxs provides a daemon called Aiccu to tunnel through dynamic IPV4 setups. Debian has the Aiccu package. With simple apt-get install you are ready to configure your tunnel. The configuration file is /etc/aiccu.conf. Set a username, password, protocol, and server in the file. All of these are provided by Sixxs. The rest of the file can be left at the defaults.
home-ipv6.png</p>

<p>My router has two interfaces. One faces the Internet and the other faces my internal network. The 6in4 tunnel provides an IPV6 address to the external interface. It is not part of the IPV6 subnet provided to me. That subnet is attached to the inside interface. In those simple steps you have your first IPV6 subnet. If you work with IPV4 then this looks familiar. At this level IPV4 and IPV6 work the same way. Don&#39;t let the IPV6 address syntax scare you. Just remember that IPV6 requires its own firewall. In Linux that is ip6tables.</p>

                    <p><a href="http://ettin/blog/2012/07/05/ipv6-migration-part6/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://ettin/blog/tag/ipv6/">ipv6</a>
                    <a href="http://ettin/blog/tag/networking/">networking</a>
                </p>
            ]]></description>
            <pubDate>
                Thu, 05 Jul 2012 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>IPv6 Migration part 5</title>
            <link>http://ettin/blog/2012/03/10/ipv6-migration-part5/</link>
            <guid>http://ettin/blog/2012/03/10/ipv6-migration-part5/</guid>
            <description><![CDATA[
                <p>My email server now functions on both IPV4 and IPV6 networks. Postfix is IPV6 ready but, the configuration needed some adjustments.</p>

<p>In places like mynetworks, found in main.cf, IPV6 addresses must be enclosed in square brackets. This does not include the netmask. For example: [::1]/128
In main.cf Postfix is told to use IPV6 using inet_protocols. Set this to all and Postfix will listen to IPV4 and IPV6 interfaces.</p>

<p>For more information about Postfix and IPV6 the Postfix web page</p>

<p>In fact a lot of configuration files have special rules to accommodate IPV6 addresses because IPV6 syntax was not a consideration when the configuration syntax was first invented. Read configuration documentation carefully.</p>

                    <p><a href="http://ettin/blog/2012/03/10/ipv6-migration-part5/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://ettin/blog/tag/ipv6/">ipv6</a>
                    <a href="http://ettin/blog/tag/networking/">networking</a>
                </p>
            ]]></description>
            <pubDate>
                Sat, 10 Mar 2012 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>IPv6 Migration part 4</title>
            <link>http://ettin/blog/2012/03/05/ipv6-migration-part4/</link>
            <guid>http://ettin/blog/2012/03/05/ipv6-migration-part4/</guid>
            <description><![CDATA[
                <p>This website is now dual stacked to both IPV4 and IPV6. In part four of my IPV6 series I&#39;ll tell you what I learned during this migration.</p>

<p>This website consists of a web server, a database, an IP address and some DNS records. Before we get to that you should know a little about hosting providers and IPV6.</p>

<p>Not all hosting providers offer IPV6. Those that do offer IPV6 do not always offer the full service. If you are shopping for an IPV6 ready hosting provider here is a checklist.</p>

<pre><code>How many IPV6 addresses do you get? Convention is that you should be provided with a /64 block. That is not a typo.
Is there a way to manage IPV6 PTR addresses?
Does the network allow dual stack IPV4 and IPV6 addressing?
What does this all cost?
</code></pre>

<p>My hosting provider, Glesys provided me with a \64 block of IPV6 addresses and the ability to dual stack, all included in the price of my host. Sadly at this time Glesys does not offer PTR record management for IPV6 addresses (they do for IPV4 addresses). When I questioned Glesys about this I was told that they plan to offer IPV6 PTR management in Q2 of 2012.</p>

<p>The next step is to know what software will work with IPV6. My site runs Debian Squeeze at this time. The packages are quite dated. Apache easily works on IPV4 and IPV6 interfaces. Note that if you are using IP address virtual hosts, such as for SSL, you will need separate entries for IPV4 and IPV6 addresses.</p>

<p>Originally this site ran using MySQL. Sadly the version that ships with Debian Squeeze had IPV6 issues. The server seemed to work but the client did not. Supposedly later version of MySQL work fine. Instead I used Postgresql with no trouble.</p>

<p>The standard NTP daemon works fine dual stacked. However, IPV6 NTP servers are hard to find. Pool.ntp.org lacks full IPV6 support. Only 2.pool.ntp.org appears to have working IPV6 addresses at this time.</p>

<p>Those who know me will expect my report on Cfengine and IPV6. It works dual stacked and exclusively with IPV6 but not without an issue. You can see my findings here.</p>

<p>OpenSSH worked dual and single IPV6 stacked without issue.</p>

<p>When dealing directly with Linux I found no IPV6 issues including Ethernet bonding, network bridges and KVM virtualization. Do be aware that IPV6 allows for addresses to be auto configured. I did see this happen when routers outside of my control advertised address allocation. The solution for me was to make change in sysctl:</p>

<p>net.ipv6.conf.all.autoconf=0
net.ipv6.conf.all.accept_ra=0
net.ipv6.conf.default.autoconf=0</p>

<p>This instructs the kernel to ignore any attempts to auto-configure.</p>

<p>Remember from previous parts in this series that you&#39;ll need separate IPV6 firewall rules. With Linux, IPV6 traffic is filtered via ip6tables. This is virtually identical to the standard iptables for IPV4 networking. Wrappers like Fwbuilder and Shorewall both support IPV6.</p>

                    <p><a href="http://ettin/blog/2012/03/05/ipv6-migration-part4/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://ettin/blog/tag/ipv6/">ipv6</a>
                    <a href="http://ettin/blog/tag/networking/">networking</a>
                </p>
            ]]></description>
            <pubDate>
                Mon, 05 Mar 2012 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

