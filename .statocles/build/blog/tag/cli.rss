<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Neil H. Watson</title>
        <link>http://watson-wilson.ca/blog/tag/cli/</link>
        <atom:link href="http://watson-wilson.ca/blog/tag/cli.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of Neil H. Watson</description>
        <generator>Statocles 0.077</generator>
        <item>
            <title>Docker API from CLI</title>
            <link>http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/</link>
            <guid>http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/</guid>
            <description><![CDATA[
                <p><a href="https://docker.com/"><img alt="Docker website" src="http://watson-wilson.ca/static/images/docker-logo.png" style="float:right" width="120px"></a></p>

<p>Docker has command line programs, but they are not well suited to automation.
Return values and pars-able output are both lacking, but there is an
<a href="https://docs.docker.com/engine/reference/api/docker_remote_api/">API</a> that you
can use instead. The Dockerd api can listen on a local socket or even a
remote accessible port, but in these examples I&#39;ll show local socket only.</p>

                    <p><a href="http://watson-wilson.ca/blog/2016/11/15/docker_api_from_cli/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/docker/">docker</a>
                    <a href="http://watson-wilson.ca/blog/tag/containers/">containers</a>
                    <a href="http://watson-wilson.ca/blog/tag/jq/">jq</a>
                    <a href="http://watson-wilson.ca/blog/tag/json/">json</a>
                    <a href="http://watson-wilson.ca/blog/tag/cli/">cli</a>
                </p>
            ]]></description>
            <pubDate>
                Tue, 15 Nov 2016 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Shell cheatsheet</title>
            <link>http://watson-wilson.ca/blog/2011/03/08/shell-cheatsheet/</link>
            <guid>http://watson-wilson.ca/blog/2011/03/08/shell-cheatsheet/</guid>
            <description><![CDATA[
                <p>The following may not apply to all shells.</p>

<h2>Job control</h2>

<ul>
<li>Resume job after suspend: <code>ctrl-q</code></li>
<li>Resume job in background: <code>bg &lt;job number&gt;</code></li>
<li>Resume job in foreground: <code>fg &lt;job number&gt;</code></li>
<li>Suspend delay (suspend at stdin): <code>ctrl-y</code></li>
<li>Suspend:  <code>ctrl-z</code></li>
</ul>

<h2>Command line laziness</h2>

<ul>
<li>Recall history line 66: <code>!66</code></li>
<li>Recall last command: <code>!!</code></li>
<li>Recall last arguement from last command: <code>!$</code></li>
<li>Recall all arguements from last command: <code>!*</code></li>
<li>Clear shell history: <code>history -c</code></li>
<li>Delete shell history entry: <code>history -d &lt;number&gt;</code></li>
<li><p>Rename rpmnew files:</p>

<pre><code>find -type f -name &quot;*.rpmnew&quot; | sed &#39;s/\(^.*\)\(\.rpmnew\)$/mv -f \1\2 \1/&#39; |sh
</code></pre></li>
<li><p>Search and replace files in place:</p>

<pre><code>find /path -name &quot;*.*&quot; -exec | perl -pi -e &#39;s///g&#39; {} \;
</code></pre></li>
<li><p>vi cli editing: <code>set -o vi</code> Now esc to enter command mode where vi keys
work. Pressing enter returns to normal mode.</p></li>
</ul>

                    <p><a href="http://watson-wilson.ca/blog/2011/03/08/shell-cheatsheet/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/shell/">shell</a>
                    <a href="http://watson-wilson.ca/blog/tag/cli/">cli</a>
                    <a href="http://watson-wilson.ca/blog/tag/cheatsheet/">cheatsheet</a>
                </p>
            ]]></description>
            <pubDate>
                Tue, 08 Mar 2011 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>GNU Screen cheatsheet</title>
            <link>http://watson-wilson.ca/blog/2011/03/08/gnu-screen-cheatsheet/</link>
            <guid>http://watson-wilson.ca/blog/2011/03/08/gnu-screen-cheatsheet/</guid>
            <description><![CDATA[
                <table>
<tr>
    <td>Change to other region</td>
    <td><code>ctrl-a tab</code></td>
</tr>
<tr>
    <td>Change to other screen</td>
    <td><code>ctrl-a 0-9</code></td>
</tr>
<tr>
    <td>Detach</td>
    <td><code>ctrl-a d</code></td>
</tr>
<tr>
    <td>Help</td>
    <td><code>ctrl-a ?</code></td>
</tr>
<tr>
    <td>Kill screen</td>
    <td><code>ctrl-a \</code></td>
</tr>
<tr>
    <td>Kill region</td>
    <td><code>ctrl-a x</code></td>
</tr>
<tr>
    <td>New screen</td>
    <td><code>ctrl-a c</code></td>
</tr>
<tr>
    <td>Reattach</td>
    <td><code>screen -r</code></td>
</tr>
<tr>
    <td>Serial connection</td>
    <td><code>screen /dev/ttyUSB0 9600</code></td>
</tr>
<tr>
    <td>Split</td>
    <td><code>ctrl-a s</code></td>
</tr>
</table>

                    <p><a href="http://watson-wilson.ca/blog/2011/03/08/gnu-screen-cheatsheet/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/shell/">shell</a>
                    <a href="http://watson-wilson.ca/blog/tag/cli/">cli</a>
                    <a href="http://watson-wilson.ca/blog/tag/cheatsheet/">cheatsheet</a>
                </p>
            ]]></description>
            <pubDate>
                Tue, 08 Mar 2011 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

