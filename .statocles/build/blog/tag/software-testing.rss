<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Neil H. Watson</title>
        <link>http://watson-wilson.ca/blog/tag/software-testing/</link>
        <atom:link href="http://watson-wilson.ca/blog/tag/software-testing.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of Neil H. Watson</description>
        <generator>Statocles 0.073</generator>
        <item>
            <title>Auditing hosts using CFEngine, EFL, and Delta Reporting</title>
            <link>http://watson-wilson.ca/blog/2015/09/18/auditing-hosts-using-cfengine-efl-and-delta-reporting/</link>
            <guid>http://watson-wilson.ca/blog/2015/09/18/auditing-hosts-using-cfengine-efl-and-delta-reporting/</guid>
            <description><![CDATA[
                <p><img alt="Clip board" src="http://watson-wilson.ca/static/images/Liste-300px.png"></p>

<p>Sometimes you want to audit a host without changing it. This can be
hard with CFEngine, but with <a href="https://github.com/neilhwatson/evolve_cfengine_freelib">EFL</a>
and <a href="https://github.com/neilhwatson/delta_reporting">Delta Reporting</a>
it&#39;s possible.</p>

                    <p><a href="http://watson-wilson.ca/blog/2015/09/18/auditing-hosts-using-cfengine-efl-and-delta-reporting/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/cfengine/">cfengine</a>
                    <a href="http://watson-wilson.ca/blog/tag/delta-reporting/">delta reporting</a>
                    <a href="http://watson-wilson.ca/blog/tag/EFL/">EFL</a>
                    <a href="http://watson-wilson.ca/blog/tag/security/">security</a>
                    <a href="http://watson-wilson.ca/blog/tag/software-testing/">software testing</a>
                </p>
            ]]></description>
            <pubDate>
                Fri, 18 Sep 2015 13:52:10 +0000
            </pubDate>
        </item>
        <item>
            <title>Testing CFEngine policy using EFL, TAP, and Perl</title>
            <link>http://watson-wilson.ca/blog/2015/08/20/testing-cfengine-using-efl-tap-and-perl/</link>
            <guid>http://watson-wilson.ca/blog/2015/08/20/testing-cfengine-using-efl-tap-and-perl/</guid>
            <description><![CDATA[
                <p><img alt="Prove and TAP output" src="http://watson-wilson.ca/static/images/efl_tests.png"></p>

<p>It&#39;s a dirty secret that few test their CFEngine policies, and fewer
still test them well. Now EFL has two bundles for testing that produce
TAP output.</p>

                    <p><a href="http://watson-wilson.ca/blog/2015/08/20/testing-cfengine-using-efl-tap-and-perl/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/cfengine/">cfengine</a>
                    <a href="http://watson-wilson.ca/blog/tag/devops/">devops</a>
                    <a href="http://watson-wilson.ca/blog/tag/EFL/">EFL</a>
                    <a href="http://watson-wilson.ca/blog/tag/software-testing/">software testing</a>
                </p>
            ]]></description>
            <pubDate>
                Thu, 20 Aug 2015 15:33:18 +0000
            </pubDate>
        </item>
        <item>
            <title>Serverspec, the good, the bad, and the ugly</title>
            <link>http://watson-wilson.ca/blog/2015/06/18/serverspec-the-good-the-bad-and-the-ugly/</link>
            <guid>http://watson-wilson.ca/blog/2015/06/18/serverspec-the-good-the-bad-and-the-ugly/</guid>
            <description><![CDATA[
                <p>I&#39;ve been using a talking about <a href="http://serverspec.org">Serverspec</a>
lately. Let me tell you about the surprises I found.</p>

                    <p><a href="http://watson-wilson.ca/blog/2015/06/18/serverspec-the-good-the-bad-and-the-ugly/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/cfengine/">cfengine</a>
                    <a href="http://watson-wilson.ca/blog/tag/serverspec/">serverspec</a>
                    <a href="http://watson-wilson.ca/blog/tag/software-testing/">software testing</a>
                </p>
            ]]></description>
            <pubDate>
                Thu, 18 Jun 2015 14:37:16 +0000
            </pubDate>
        </item>
        <item>
            <title>Testing CFEngine policy by counting classes</title>
            <link>http://watson-wilson.ca/blog/2014/09/19/testing-cfengine-policy-by-counting-classes/</link>
            <guid>http://watson-wilson.ca/blog/2014/09/19/testing-cfengine-policy-by-counting-classes/</guid>
            <description><![CDATA[
                <p><img alt="counting" src="http://watson-wilson.ca/static/images/counting.jpg"></p>

<p>I&#39;ve added a <a href="https://github.com/neilhwatson/evolve_cfengine_freelib/commit/00093210649c4b236e9d4940a23f5a6fe2e60742">new bundle</a>
to the 3.5 branch of EFL. This bundle <em>efl_test_count</em> allows you to
count the classes matching a regular expression and test if that count
matches your expected count. Consider the <em>efl_service</em> bundle, it
promises that services are configured and running. My SSH parameters
for this bundle include a template file for configuration. I promise
that /etc/ssh/sshd_config is built from the sshd_config.tmp, a
template.</p>

                    <p><a href="http://watson-wilson.ca/blog/2014/09/19/testing-cfengine-policy-by-counting-classes/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/cfengine/">cfengine</a>
                    <a href="http://watson-wilson.ca/blog/tag/delta-reporting/">delta reporting</a>
                    <a href="http://watson-wilson.ca/blog/tag/devops/">devops</a>
                    <a href="http://watson-wilson.ca/blog/tag/EFL/">EFL</a>
                    <a href="http://watson-wilson.ca/blog/tag/software-testing/">software testing</a>
                </p>
            ]]></description>
            <pubDate>
                Fri, 19 Sep 2014 11:45:48 +0000
            </pubDate>
        </item>
        <item>
            <title>Testing CFEngine policy</title>
            <link>http://watson-wilson.ca/blog/2014/09/17/testing-cfengine-policy/</link>
            <guid>http://watson-wilson.ca/blog/2014/09/17/testing-cfengine-policy/</guid>
            <description><![CDATA[
                <p><img alt="f4-crashtest" src="http://watson-wilson.ca/static/images/f4-crashtest.jpg"></p>

<p>After 2 productive days at <a href="http://www.devopsdays.org/events/2014-toronto/">Devopsdays Toronto</a>
I&#39;ve been thinking more about how to test CFEngine policy. Not just
prototype, but production tests too. The ideal situation is that a
machine tests your would-be production policy and then deploys it fully
if the test suite passes. This is completely automatic. How do we get
there?</p>

                    <p><a href="http://watson-wilson.ca/blog/2014/09/17/testing-cfengine-policy/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://watson-wilson.ca/blog/tag/cfengine/">cfengine</a>
                    <a href="http://watson-wilson.ca/blog/tag/devops/">devops</a>
                    <a href="http://watson-wilson.ca/blog/tag/EFL/">EFL</a>
                    <a href="http://watson-wilson.ca/blog/tag/software-testing/">software testing</a>
                </p>
            ]]></description>
            <pubDate>
                Wed, 17 Sep 2014 10:14:41 +0000
            </pubDate>
        </item>
    </channel>
</rss>

