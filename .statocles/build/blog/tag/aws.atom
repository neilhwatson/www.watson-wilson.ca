<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://watson-wilson.ca/blog/tag/aws/</id>
    <title>Neil H. Watson</title>
    <updated>2018-02-11T00:00:00Z</updated>
    <link rel="self" href="http://watson-wilson.ca/blog/tag/aws.atom"/>
    <link rel="alternate" href="http://watson-wilson.ca/blog/tag/aws/"/>
    <generator version="0.093">Statocles</generator>
    <entry>
        <id>http://watson-wilson.ca/blog/2018/02/11/aws-asg-of-one/</id>
        <title>AWS single host resilience with autoscaling groups</title>
        <link rel="alternate" href="http://watson-wilson.ca/blog/2018/02/11/aws-asg-of-one/" />
        <content type="html"><![CDATA[
            <p><a href="https://aws.amazon.com/"><img alt="aws logo" src="http://watson-wilson.ca/static/images/aws.png" style="float:right" width="120px"></a></p>

<p>Make even a single AWS EC2 host highly available using autoscaling groups. Here&#39;s example using ASG, EFS for persistent data, and Terraform for easy automation.</p>

                <p><a href="http://watson-wilson.ca/blog/2018/02/11/aws-asg-of-one/#section-2">Continue reading...</a></p>
            <p>Tags:
                <a href="http://watson-wilson.ca/blog/tag/aws/">AWS</a>
                <a href="http://watson-wilson.ca/blog/tag/cloud/">cloud</a>
                <a href="http://watson-wilson.ca/blog/tag/asg/">asg</a>
                <a href="http://watson-wilson.ca/blog/tag/autoscaling/">autoscaling</a>
                <a href="http://watson-wilson.ca/blog/tag/high-availability/">high availability</a>
                <a href="http://watson-wilson.ca/blog/tag/terraform/">terraform</a>
            </p>
        ]]></content>
        <updated>2018-02-11T00:00:00Z</updated>
        <category term="AWS" />
        <category term="cloud" />
        <category term="asg" />
        <category term="autoscaling" />
        <category term="high availability" />
        <category term="terraform" />
    </entry>
    <entry>
        <id>http://watson-wilson.ca/blog/2017/04/17/terraform-state/</id>
        <title>Understanding Terraform State</title>
        <link rel="alternate" href="http://watson-wilson.ca/blog/2017/04/17/terraform-state/" />
        <content type="html"><![CDATA[
            <p><a href="https://terraform.io/"><img alt="terraform logo" src="https://raw.githubusercontent.com/hashicorp/terraform-website/master/content//source/assets/images/og-image.png" style="float:right" width="120px"></a></p>

<p>Terraform <a href="https://www.terraform.io/docs/state/purpose.html">state</a> is a database kept by Terraform to help it reconcile Terraform resource dependencies, and reconcile between Terraform code and the actual state on the target infrastructure. For example, in the state, Terraform expects to find an entry that matches your AWS resource defining a Route53 record and in your Terraform code. Whether or not the entry exits determines if Terraform will make a change or not.</p>

                <p><a href="http://watson-wilson.ca/blog/2017/04/17/terraform-state/#section-2">Continue reading...</a></p>
            <p>Tags:
                <a href="http://watson-wilson.ca/blog/tag/terraform/">terraform</a>
                <a href="http://watson-wilson.ca/blog/tag/configuration-management/">configuration management</a>
                <a href="http://watson-wilson.ca/blog/tag/cloud/">cloud</a>
                <a href="http://watson-wilson.ca/blog/tag/aws/">AWS</a>
            </p>
        ]]></content>
        <updated>2017-04-17T00:00:00Z</updated>
        <category term="terraform" />
        <category term="configuration management" />
        <category term="cloud" />
        <category term="AWS" />
    </entry>
    <entry>
        <id>http://watson-wilson.ca/blog/2017/03/30/terraform-modules/</id>
        <title>Terraform modules</title>
        <link rel="alternate" href="http://watson-wilson.ca/blog/2017/03/30/terraform-modules/" />
        <content type="html"><![CDATA[
            <p><a href="https://terraform.io/"><img alt="terraform logo" src="https://raw.githubusercontent.com/hashicorp/terraform-website/master/content//source/assets/images/og-image.png" style="float:right" width="120px"></a></p>

<p>Here&#39;s what I&#39;ve learned so far using Terraform and its modules. I&#39;ve just scratched the surface so test and research on your own.</p>

                <p><a href="http://watson-wilson.ca/blog/2017/03/30/terraform-modules/#section-2">Continue reading...</a></p>
            <p>Tags:
                <a href="http://watson-wilson.ca/blog/tag/terraform/">terraform</a>
                <a href="http://watson-wilson.ca/blog/tag/cloud/">cloud</a>
                <a href="http://watson-wilson.ca/blog/tag/configuration-management/">configuration management</a>
                <a href="http://watson-wilson.ca/blog/tag/aws/">AWS</a>
            </p>
        ]]></content>
        <updated>2017-03-30T00:00:00Z</updated>
        <category term="terraform" />
        <category term="cloud" />
        <category term="configuration management" />
        <category term="AWS" />
    </entry>
</feed>

